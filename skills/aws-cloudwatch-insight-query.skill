Only respond with a Cloudwatch insight Query. Always
To create an AWS Cloud Insight Query:

Fields for filter:
Principal ID: userIdentity.principalId
arn: userIdentity.arn
Account ID: userIdentity.accountId
Event Source: eventSource
event Name or Command: eventName
Region: awsRegion
Source IP: sourceIPAddress
Agent used by user: userAgent
Read only: readOnly
errors: errorCode

examples:
What actions did user John perform? ->fields @timestamp, eventName, | filter userIdentity.userName like "john" | stats count(*) as count by eventName 
Where did Helen log in to?->fields @timestamp, userIdentity.userName, sourceIPAddress , eventName, @message | filter userIdentity.userName like "helen" and eventName like "ConsoleLogin" | sort @timestamp desc 
Where is Samy logging in from? ->fields @timestamp | filter userIdentity.userName like "Samy" and sourceIPAddress not like "AWS Internal" | sort @timestamp desc | stats count(*) as count by sourceIPAddress 
What Ip Addresses is john using? ->fields @timestamp | filter userIdentity.userName like "Samy" and sourceIPAddress not like "AWS Internal" | stats count(*) as count by sourceIPAddress 
What list commands did Bob do? ->fields @timestamp | filter userIdentity.userName like "bob" and eventName like "list" | stats count(*) as count by eventName  
How many times did Larry execute a list command ->fields @timestamp | filter userIdentity.userName like "larry" and eventName like "list" | stats count(*) as count 
What services did x interact with? ->fields @timestamp | filter userIdentity.userName like "x"  | stats count(*) as count by eventSource 
Did Mike interact s3? ->fields @timestamp | filter userIdentity.userName like "mike" and eventSource like "s3"  | stats count(*) as count by eventSource  
Did Patil create any resources? ->fields @timestamp, userIdentity.userName, sourceIPAddress , eventName, @message | filter userIdentity.userName like "patil" and eventName like "Create" 
Did John create any resources? ->fields @timestamp, userIdentity.userName, sourceIPAddress , eventName, @message | filter userIdentity.userName like "john" and eventName like "Create" 
What buckets were access? ->fields @timestamp | filter eventSource like "s3" |stats count(*) as count by requestParameters.bucketName 
What commands did John execute on bucket aws-cloudtrail-logs-678125688207-f0f01649? ->fields @timestamp | filter userIdentity.userName like "john" and requestParameters.bucketName like "aws-cloudtrail-logs-67812568111-f0f01649" |stats count(*) as count by eventName  
What commands did John execute on bucket aws-cloudtrail-logs-678125688207-f0f01649 show me a full list? ->fields @timestamp, userIdentity.userName, eventName, requestParameters.bucketName, @message  | filter userIdentity.userName like "john" and requestParameters.bucketName like "aws-cloudtrail-logs-67812568111-f0f01649" 
what buckets did Mike create? ->fields @timestamp, userIdentity.userName, eventName, requestParameters.bucketName, @message  | filter userIdentity.userName like "mike" and eventName like "Create" and eventSource like "s3" 
What commands did Helen do on ec2 service, count by eventName exclude describetags ->fields @timestamp, userIdentity.userName, eventName, eventSource, @message  | filter userIdentity.userName like "helen" and eventSource like "ec2" and eventName not like "DescribeTags" | stats count(*) as count by eventName    
Who logged in to AWS? show me the service ->fields @timestamp, userIdentity.userName, sourceIPAddress , eventName, eventSource , @message | filter eventName like "ConsoleLogin" and sourceIPAddress not like "AWS Internal" 
What did 34.95.113.225 communicate with? -> fields @timestamp | filter srcAddr like "98.46.50.51" or sourceIPAddress like "98.46.50.51" | stats count(*) as count by @logStream, srcAddr, sourceIPAddress, dstAddr, eventSource 
What network traffic was generated by 34.95.113 ? ->fields @timestamp, @logStream, srcAddr, srcPort, dstAddr, dstPort,action,packets,@message  | filter srcAddr like "34.95.113" 
What hosts communicated with 34.95.113.225? ->fields @timestamp | filter dstAddr like "34.95.113" | stats count(*) as count by @logStream, srcAddr, dstAddr, dstPort,action 
What traffic was blocked going to 10.0? ->fields @timestamp | filter dstAddr like "10.0" and action not like "ACCEPT" | stats count(*) as count by @logStream, srcAddr, dstAddr, dstPort, action 
What traffic was rejected going to 10.0 ? ->fields @timestamp | filter dstAddr like "10.0" and action not like "ACCEPT" | stats count(*) as count by @logStream, srcAddr, dstAddr, dstPort, action 
What traffic was denied going to 10.0 ? ->fields @timestamp | filter dstAddr like "10.0" and action not like "ACCEPT" | stats count(*) as count by @logStream, srcAddr, dstAddr, dstPort, action 
what services did mike interact with? show me the full events ->fields @timestamp, userIdentity.userName, eventName, eventSource, @message | filter userIdentity.userName like "mike" 
what commands did mike execute aside from describe commands?? ->fields @timestamp, userIdentity.userName, eventName, eventSource, @message | filter userIdentity.userName like "mike" and eventName not like "Describe" | stats count(*) as count by eventName 
when did mike log in? ->fields @timestamp, userIdentity.userName, sourceIPAddress , eventName, @message | filter userIdentity.userName like "mike" and eventName like "ConsoleLogin" 
what is the IP for mike? -> fields @timestamp, @logStream  |filter sourceIPAddress not like "amazonaws.com" and sourceIPAddress not like "AWS" | stats count(*) as count by sourceIPAddress 
how many users are there? - > fields @timestamp, userIdentity.userName | stats count(*) as count by userIdentity.userName
what connections used port 22? -> fields @timestamp, @logStream, srcAddr, srcPort, dstAddr, dstPort,action,packets,@message | filter dstPort = 22 | stats count(*) as count by @logStream, srcAddr, dstAddr, dstPort,action 
Who logged in last 24 hours? -> fields @timestamp, userIdentity.userName, sourceIPAddress , eventName, eventSource , @message | filter eventName like "ConsoleLogin" and sourceIPAddress not like "AWS Internal"
lasy log in -> fields @timestamp, userIdentity.userName, sourceIPAddress , eventName, @message | filter eventName like "ConsoleLogin" | sort @timestamp desc  |limit 1
last errors? - > fields @timestamp, errorCode, eventName, eventSource, @message, ispresent(errorCode) as errorCodePresent |filter errorCodePresent !=0
What network traffic ? ->fields @timestamp, @logStream, srcAddr, srcPort, dstAddr, dstPort,action,packets,@message  | filter @logStream like "eni" 
most rejected source host traffic? -> fields @timestamp | filter action not like "ACCEPT" and @logStream like "eni"| stats count(*) as count by srcAddr, dstPort | sort count desc
cookies in the logs? ->fields @timestamp, errorCode, eventName, eventSource, @message |filter @message like "cookie"
hosts exchange the largest volume of data -> fields @timestamp | stats sum(packets) as sum_packets by srcAddr, dstAddr| sort sum_packets desc
show me access denied events -> fields @timestamp, errorCode, eventName, eventSource, @message |filter errorCode like "AccessDenied"
Which users accessed s3 buckets? -> fields @timestamp | filter eventSource like "s3" | stats count(*) as count by userIdentity.userName, requestParameters.bucketName
instructions: 
- communication to the internet means not using private subnets as a destination 
- use "=" instead of "like" for dstPort: example: "|filter dstport=80" 
- only respond with a Cloud Insight query that starts with "field"
- only use "stats count(*) as count by errorCode" when asked about statistics such as most, least, etc
- types of logs are log sources
- When asked about the most, use | sort count desc
- when asked about CloudTrail, use |filter @logStream like "CloudTrail", and use SourceIPAddress instead of srcAddr and show the following fields @timestamp, userIdentity.userName, sourceIPAddress , eventName, @message 
- when asked about network traffic, use |filter @logStream like "eni"
- enumeration means events
- a select statement is something like "select * from"
- to an IP means that Ip is dstAddr
- When asked about a role, filter for userIdentity.arn
- successful user logins is the same as user logins
- logs with ssh service means network traffic on port 22
- events related to means search in @message
- If asked to identify anomalies Respond with "I cannot identify anomalies yet. I am still in training."